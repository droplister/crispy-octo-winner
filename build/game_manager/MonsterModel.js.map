{"version":3,"sources":["../../src/game_manager/MonsterModel.js"],"names":["MonsterModel","x","y","bitcoin","spawnerId","frame","health","attack","mVelocity","id","maxHealth","damage","randomAngle","radian","Math","PI","distance","mapWidthScaled","Map","TileWidth","Scale","FACTOR","mapHeightScaled","TileHeight","newY","sin","newX","cos","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;IAEqBA,Y;AACnB,wBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,SAA7D,EAAwE;AAAA;AACtE,SAAKC,EAAL,aAAaL,SAAb,cAA0B,eAA1B;AACA,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKE,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKI,SAAL,GAAiBJ,MAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACD;;;;+BAEUG,M,EAAQ;AACjB,WAAKL,MAAL,IAAeK,MAAf;AACD;;;2BAEM;AACL,UAAMC,WAAW,GAAG,yBAAa,CAAb,EAAgB,GAAhB,CAApB;AACA,UAAMC,MAAM,GAAID,WAAW,GAAGE,IAAI,CAACC,EAApB,GAA0B,GAAzC;AACA,UAAMC,QAAQ,GAAG,yBAAa,EAAb,EAAiB,KAAKR,SAAtB,CAAjB;AACA,UAAMS,cAAc,GAAGC,WAAIC,SAAJ,GAAgB,EAAhB,GAAqBC,aAAMC,MAAlD;AACA,UAAMC,eAAe,GAAGJ,WAAIK,UAAJ,GAAiB,EAAjB,GAAsBH,aAAMC,MAApD;AACA,UAAIG,IAAI,GAAGV,IAAI,CAACW,GAAL,CAASZ,MAAT,IAAmBG,QAA9B;AACA,UAAIU,IAAI,GAAGZ,IAAI,CAACa,GAAL,CAASd,MAAT,IAAmBG,QAA9B;AACAY,MAAAA,OAAO,CAACC,GAAR,uBAA2B,KAAK5B,CAAhC,uBAA8C,KAAKC,CAAnD;AACA0B,MAAAA,OAAO,CAACC,GAAR,sBAA0BH,IAA1B,sBAA0CF,IAA1C,GATK,CAWL;;AACA,UAAI,KAAKvB,CAAL,GAASyB,IAAT,GAAgBT,cAApB,EAAoC;AAClCS,QAAAA,IAAI,GAAGT,cAAc,GAAG,KAAKhB,CAA7B;AACD,OAFD,MAEO,IAAI,KAAKA,CAAL,GAASyB,IAAT,GAAgB,CAApB,EAAuB;AAC5BA,QAAAA,IAAI,GAAG,KAAKzB,CAAZ;AACD,OAFM,MAEA,CACL;AACD;;AACD,UAAI,KAAKC,CAAL,GAASsB,IAAT,GAAgBF,eAApB,EAAqC;AACnCE,QAAAA,IAAI,GAAGF,eAAe,GAAG,KAAKpB,CAA9B;AACD,OAFD,MAEO,IAAI,KAAKA,CAAL,GAASsB,IAAT,GAAgB,CAApB,EAAuB;AAC5BA,QAAAA,IAAI,GAAG,KAAKtB,CAAZ;AACD,OAFM,MAEA,CACL;AACD;;AAED,WAAKD,CAAL,IAAUyB,IAAV;AACA,WAAKxB,CAAL,IAAUsB,IAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,wBAA4B,KAAK5B,CAAjC,uBAA+C,KAAKC,CAApD;AACA0B,MAAAA,OAAO,CAACC,GAAR,uBAA2BH,IAA3B,sBAA2CF,IAA3C,GA9BK,CA+BL;AACA;;AAEA,UAAI,KAAKvB,CAAL,GAAS,IAAT,IAAiB,KAAKC,CAAL,GAAS,IAA9B,EAAoC;AAClC0B,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,oBAAwBjB,WAAxB,mBAA4C,KAAKX,CAAjD,uBAA+DyB,IAA/D,iBAA0E,KAAKxB,CAA/E,uBAA6FsB,IAA7F,yBAAgHR,QAAhH;AACD;AACF","sourcesContent":["import { v4 } from 'uuid';\nimport { randomNumber, Scale, Map } from './utils';\n\nexport default class MonsterModel {\n  constructor(x, y, bitcoin, spawnerId, frame, health, attack, mVelocity) {\n    this.id = `${spawnerId}-${v4()}`;\n    this.spawnerId = spawnerId;\n    this.x = x;\n    this.y = y;\n    this.bitcoin = bitcoin;\n    this.frame = frame;\n    this.health = health;\n    this.maxHealth = health;\n    this.attack = attack;\n    this.mVelocity = mVelocity;\n  }\n\n  loseHealth(damage) {\n    this.health -= damage;\n  }\n\n  move() {\n    const randomAngle = randomNumber(1, 360);\n    const radian = (randomAngle * Math.PI) / 180;\n    const distance = randomNumber(20, this.mVelocity);\n    const mapWidthScaled = Map.TileWidth * 32 * Scale.FACTOR;\n    const mapHeightScaled = Map.TileHeight * 32 * Scale.FACTOR;\n    let newY = Math.sin(radian) * distance;\n    let newX = Math.cos(radian) * distance;\n    console.log(`PRE this.x: ${this.x}, this.y: ${this.y}`);\n    console.log(`PRE new x: ${newX}, new y: ${newY}`);\n\n    // check for out of bounds\n    if (this.x + newX > mapWidthScaled) {\n      newX = mapWidthScaled - this.x;\n    } else if (this.x + newX < 0) {\n      newX = this.x;\n    } else {\n      //\n    }\n    if (this.y + newY > mapHeightScaled) {\n      newY = mapHeightScaled - this.y;\n    } else if (this.y + newY < 0) {\n      newY = this.y;\n    } else {\n      //\n    }\n\n    this.x += newX;\n    this.y += newY;\n    console.log(`POST this.x: ${this.x}, this.y: ${this.y}`);\n    console.log(`POST new x: ${newX}, new y: ${newY}`);\n    // there is logic in each if statement to also provide if logic on whether or not the monster goes out of bounds\n    // 1 - 90 degrees\n\n    if (this.x > 3840 || this.y > 3840) {\n      console.log('monster on the run');\n      console.log(`degrees: ${randomAngle} - x: ${this.x}, (newX): ${newX} y: ${this.y}, (newY): ${newY}, distance: ${distance}`);\n    }\n  }\n}\n"],"file":"MonsterModel.js"}